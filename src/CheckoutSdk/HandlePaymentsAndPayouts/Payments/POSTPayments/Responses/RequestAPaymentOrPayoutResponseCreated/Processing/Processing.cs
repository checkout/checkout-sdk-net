using System.Collections.Generic;

namespace Checkout.HandlePaymentsAndPayouts.Payments.POSTPayments.Responses.RequestAPaymentOrPayoutResponseCreated.
    Processing
{
    /// <summary>
    /// processing
    /// Returns information related to the processing of the payment
    /// </summary>
    public class Processing
    {
        /// <summary>
        /// A unique identifier for the authorization that is submitted to the card scheme during processing
        /// [Optional]
        /// </summary>
        public string RetrievalReferenceNumber { get; set; }

        /// <summary>
        /// A unique identifier for the transaction generated by the acquirer
        /// [Optional]
        /// </summary>
        public string AcquirerTransactionId { get; set; }

        /// <summary>
        /// A code representing the follow-up action to take with the payment, as recommended by Checkout.com
        /// [Optional]
        /// </summary>
        public string RecommendationCode { get; set; }

        /// <summary>
        /// The scheme the transaction was processed with
        /// [Optional]
        /// </summary>
        public string Scheme { get; set; }

        /// <summary>
        /// [BETA]
        /// The Merchant Advice Code (MAC) provided by Mastercard, which contains additional information about the
        /// transaction.
        /// For example, the MAC can inform you if the transaction was performed using a consumer non-reloadable prepaid
        /// card or a consumer single-use virtual card.
        /// For declined transactions, the MAC will also let you know whether the payment can be retried, and how long
        /// you should wait before doing so.
        /// [Optional]
        /// </summary>
        public string PartnerMerchantAdviceCode { get; set; }

        /// <summary>
        /// [BETA]
        /// The original authorization response code sent by the scheme. This is also referred to as the raw response
        /// code.
        /// This differs from the recommendation_code value, which is provided by Checkout.com and is standardized
        /// across all schemes.
        /// [Optional]
        /// </summary>
        public string PartnerResponseCode { get; set; }

        /// <summary>
        /// Unique order identification of an Afterpay payment
        /// [Optional]
        /// </summary>
        public string PartnerOrderId { get; set; }

        /// <summary>
        /// Unique identification of a payment provided by partner
        /// [Optional]
        /// </summary>
        public string PartnerPaymentId { get; set; }

        /// <summary>
        /// Status of a payment provided by partner
        /// [Optional]
        /// </summary>
        public string PartnerStatus { get; set; }

        /// <summary>
        /// Unique transaction identification provided by partner
        /// [Optional]
        /// </summary>
        public string PartnerTransactionId { get; set; }

        /// <summary>
        /// Error codes provided by partner
        /// [Optional]
        /// </summary>
        public IList<string> PartnerErrorCodes { get; set; }

        /// <summary>
        /// Error description provided by partner
        /// [Optional]
        /// </summary>
        public string PartnerErrorMessage { get; set; }

        /// <summary>
        /// Authorization code provided by partner
        /// [Optional]
        /// </summary>
        public string PartnerAuthorizationCode { get; set; }

        /// <summary>
        /// Authorization response code provided by partner
        /// [Optional]
        /// </summary>
        public string PartnerAuthorizationResponseCode { get; set; }

        /// <summary>
        /// Surcharge amount applied to the transaction in minor units
        /// [Optional]
        /// >= 0
        /// </summary>
        public int? SurchargeAmount { get; set; }

        /// <summary>
        /// The type of Primary Account Number (PAN) used for the payment. DPAN indicates network token was used, FPAN
        /// indicates the full card was used
        /// [Optional]
        /// </summary>
        public PanTypeProcessedType? PanTypeProcessed { get; set; }

        /// <summary>
        /// The flag indicating if Checkout Network Token was available for the payment
        /// [Optional]
        /// </summary>
        public bool? CkoNetworkTokenAvailable { get; set; }
    }
}